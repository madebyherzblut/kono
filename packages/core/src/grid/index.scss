@import "./variables";
@import "../mixins/breakpoints";

.grid {
  margin-right: auto;
  margin-left: auto;
  padding-right: $grid-outer-margin;
  padding-left: $grid-outer-margin;
  flex: 1; // Fixes IE11
}

.grid--paddingless {
  padding-left: 0;
  padding-right: 0;
}

.grid__row {
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-right: $grid-gutter-width * 0.5 * -1;
  margin-left: $grid-gutter-width * 0.5 * -1;
}

.grid__row--reverse {
  flex-direction: row-reverse;
}

.grid__col--reverse {
  flex-direction: column-reverse;
}

@each $breakpoint, $width in $grid-breakpoints {
  $name: if($breakpoint == default, "", "--#{$breakpoint}");
  $separator: if($breakpoint == default, "--", "-");

  @include breakpoint($width) {
    .grid {
      max-width: $width;
    }

    $column-selectors: ();
    @for $i from 1 through $grid-grid-columns {
      $column-selectors: append(
        $column-selectors,
        ".grid__col#{$name}#{$separator}#{$i}",
        "comma"
      );
      $column-selectors: append(
        $column-selectors,
        ".grid__col#{$name}#{$separator}offset-#{$i}",
        "comma"
      );
    }

    .grid__col#{$name},
    #{$column-selectors} {
      flex-basis: 0;
      flex-grow: 1;
      flex-shrink: 0;
      max-width: 100%;
      padding-left: $grid-gutter-width / 2;
      padding-right: $grid-gutter-width / 2;
    }

    @for $i from 1 through $grid-grid-columns {
      .grid__col#{$name + $separator + $i} {
        flex-basis: 100% / $grid-grid-columns * $i;
        max-width: 100% / $grid-grid-columns * $i;
      }
    }

    @for $i from 0 through $grid-grid-columns {
      .grid__col#{$name}#{$separator}offset-#{$i} {
        @if $i == 0 {
          margin-left: 0;
        } @else {
          margin-left: 100% / $grid-grid-columns * $i;
        }
      }
    }

    .grid__row#{$name}#{$separator}start {
      justify-content: flex-start;
    }

    // TODO: This does not support ltr layouts
    .grid__col#{$name}#{$separator}start {
      text-align: left;
    }

    .grid__row#{$name}#{$separator}center {
      justify-content: center;
    }

    // TODO: This does not support ltr layouts
    .grid__col#{$name}#{$separator}center {
      text-align: center;
    }

    .grid__row#{$name}#{$separator}end {
      justify-content: flex-end;
    }

    // TODO: This does not support ltr layouts
    .grid__col#{$name}#{$separator}end {
      text-align: right;
    }

    .grid__row#{$name}#{$separator}top {
      align-items: flex-start;
    }

    .grid__row#{$name}#{$separator}middle {
      align-items: center;
    }

    .grid__row#{$name}#{$separator}bottom {
      align-items: flex-end;
    }

    .grid__row#{$name}#{$separator}around {
      justify-content: space-around;
    }

    .grid__row#{$name}#{$separator}between {
      justify-content: space-between;
    }

    .grid__col#{$name}#{$separator}first {
      order: -1;
    }

    .grid__col#{$name}#{$separator}last {
      order: 1;
    }
  }
}
